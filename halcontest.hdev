<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.2.0">
<procedure name="main">
<interface/>
<body>
<c>*READ</c>
<l>dev_close_window ()</l>
<l>dev_update_off ()</l>
<l>dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</l>
<l>set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>Message := 'open a file'</l>
<l>disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<c></c>
<c>* </c>
<c>* Show input images with different illumination</c>
<l>*read_image (Images, 'photometric_stereo/blister_back_0' + [1:4])</l>
<l>read_image (Images, '/home/wzp/git/mysavecode/opencv/test_img/side/Image_3'+[0:7]+'.jpg')</l>
<l>for   I := 1 to 8  by 1</l>
<l>    Message := 'Acquire image ' + I+ ' of 8'</l>
<l>    select_obj (Images, Image, I)</l>
<l>    dev_display (Image)</l>
<l>    disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
<l>    stop()</l>
<c></c>
<c>*mean image;  cut bottle;</c>
<l>    mean_image (Image, ImageMean, 5, 5)</l>
<l>    auto_threshold(Image,whiteimage,3)</l>
<l>    connection(whiteimage,connections)</l>
<l>    select_shape (connections, SelectedRegions1, 'area', 'and', 1000000, 6000000)</l>
<l>    shape_trans (SelectedRegions1, RegionTrans, 'rectangle1')</l>
<l>    *dyn_threshold (Image, ImageMean, RegionDynThresh, 15, 'light')</l>
<l>    dev_display (Image)</l>
<l>    dev_display (RegionTrans)</l>
<l>    Message := 'Regions segmented with dyn_threshold'</l>
<l>    disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
<l>    disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>    stop ()</l>
<c></c>
<c>    </c>
<c>    </c>
<c>    </c>
<c>    </c>
<c>    </c>
<c>*IOS  </c>
<c></c>
<c></c>
<c></c>
<c></c>
<c> </c>
<l>endfor</l>
<c></c>
<c></c>
<c></c>
<c></c>
<l>* closing_rectangle1 (RegionDynThresh, RegionClosing, 8.5, 10)</l>
<l>* opening_rectangle1 (RegionClosing, RegionOpening, 6.5, 10)</l>
<l>* connection (RegionOpening, ConnectedRegions)</l>
<l>* smallest_circle (ConnectedRegions, Row, Column, Radius)</l>
<l>* gen_circle_contour_xld (ContCircle, Row, Column, Radius, 0, 6.28318, 'positive', 1)</l>
<c>* </c>
<c>* Show the results</c>
<l>* dev_display (Image)</l>
<l>* dev_set_color ('green')</l>
<l>* dev_display (ContCircle)</l>
<l>* Message := 'Results of braille segmentation after morphology'</l>
<l>* disp_message (WindowHandle, Message, 'window', 12, 12, 'black', 'true')</l>
<l>* dev_update_on ()</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
